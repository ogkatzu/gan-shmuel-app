services:
  weight_app:
    privileged: true
    build: ../prod_env/main/weight/
    networks:
      - weight-network
      - backend
    ports:
      - "8082:5000"
    restart: on-failure
    depends_on:
      weight_db1:
        condition: service_healthy
    environment:
      TEST_HOST: ${WEIGHT_TEST_HOST}
      MYSQL_DATABASE: ${WEIGHT_MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${WEIGHT_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${WEIGHT_MYSQL_USER}
      MYSQL_PASSWORD: ${WEIGHT_MYSQL_PASSWORD}
      MYSQL_HOST: weight_db1
    volumes:
      - ${WEIGHT_PATH_IN}:/app/in
  
  weight_db1:
    image: mysql:8
    restart: always
    privileged: true
    networks:
      - weight-network
    environment:
      MYSQL_DATABASE: weightdb
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: wightuser
      MYSQL_PASSWORD: weightpass
      MYSQL_HOST: weight_db1
    ports:
      - "3309:3306"
    volumes:
      - ../prod_env/main/weight/weightdb.sql:/docker-entrypoint-initdb.d/weightdb.sql
      - ../prod_env/main/weight/db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-prootpass"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s


  billing-app:
    build:
      context: ../prod_env/main/billing/flask-in/
      dockerfile: Dockerfile
    image: billing-app:1.0
    #container_name: billing-app
    working_dir: /app
    environment:
      WEIGHT_DOCKER_HOST: ci-weight_app-1
      MYSQL_HOST: billdb
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456         # ✅ Must match MYSQL_ROOT_PASSWORD from billdb
      MYSQL_DATABASE: billdb
    ports:
      - "8083:5500"
    volumes:
    
      - ../prod_env/main/billing/flask-in/in:/app/in
    depends_on:
      - billdb
    networks:
      - backend
      - billing-network
    restart: unless-stopped

  billdb:
    image: mysql:5.7
    #container_name: billdb
    environment:
      MYSQL_ROOT_PASSWORD: 123456    # ✅ Must match billing-app's MYSQL_PASSWORD
      MYSQL_DATABASE: billingdb
    ports:
      - "3310:3306"
    volumes:
      - ../prod_env/main/billing/billdb:/docker-entrypoint-initdb.d
      - ../prod_env/main/billing-data:/var/lib/mysql
    networks:
      - billing-network
    restart: unless-stopped


volumes:
  db_data:
  billing-data:

networks:
  weight-network:
    driver: bridge
    external: true
  backend:
    driver: bridge
    external: true
  billing-network:
    driver: bridge
    external: true
